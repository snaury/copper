package protocol;

message Route {
    required string service = 1;
    required uint32 weight = 2;
    optional uint32 distance = 3;
}

message Endpoint {
    required string network = 1;
    required string address = 2;
    optional sint64 target_id = 3;
}

message SubscribeOption {
    required string service = 1;
    optional uint32 distance = 2;
}

message SubscribeRequest {
    repeated SubscribeOption options = 1;
    optional uint32 max_retries = 2;
}

message SubscribeResponse {
    required sint64 target_id = 1;
}

message GetEndpointsRequest {
    required sint64 target_id = 1;
}

message GetEndpointsResponse {
    repeated Endpoint endpoints = 1;
}

message StreamEndpointsRequest {
    required sint64 target_id = 1;
}

message StreamEndpointsResponse {
    repeated Endpoint added = 1;
    repeated Endpoint removed = 2;
}

message UnsubscribeRequest {
    required sint64 target_id = 1;
}

message UnsubscribeResponse {
    // nothing yet
}

message PublishRequest {
    required sint64 target_id = 1;
    required string name = 2;
    optional uint32 distance = 3;
    optional uint32 concurrency = 4;
}

message PublishResponse {
    // nothing yet
}

message UnpublishRequest {
    required sint64 target_id = 1;
}

message UnpublishResponse {
    // nothing yet
}

message SetRouteRequest {
    required string name = 1;
    repeated Route routes = 2;
}

message SetRouteResponse {
    // nothing yet
}

message LookupRouteRequest {
    required string name = 1;
}

message LookupRouteResponse {
    repeated Route routes = 1;
}

message StreamServicesRequest {
    // nothing yet
}

message StreamServicesResponse {
    required sint64 target_id = 1;
    required string name = 2;
    optional uint32 distance = 3;
    optional uint32 concurrency = 4;
}

enum RequestType {
    Subscribe = 1;
    GetEndpoints = 2;
    StreamEndpoints = 3;
    Unsubscribe = 4;
    Publish = 5;
    Unpublish = 6;
    SetRoute = 7;
    LookupRoute = 8;
    StreamServices = 9;
}
