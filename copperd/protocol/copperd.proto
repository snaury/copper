package protocol;

message Route {
    required string service = 1;
    required uint32 weight = 2;
    optional uint32 distance = 3;
}

message Endpoint {
    enum EventType {
        ADDED = 1;
        REMOVED = 2;
        REPLACED = 3;
    }

    required string address = 1;
    optional string network = 2;
}

message SubscribeRequest {
    message Option {
        required string service = 1;
        optional uint32 distance = 2;
        optional uint32 max_retries = 3;
    }

    repeated Option options = 1;
}

message SubscribeResponse {
    required sint64 target_id = 1;
}

message GetEndpointsRequest {
    required sint64 target_id = 1;
    optional bool stream_updates = 2;
}

message GetEndpointsResponse {
    required Endpoint.EventType type = 1;
    repeated Endpoint endpoints = 2;
}

message UnsubscribeRequest {
    required sint64 target_id = 1;
}

message UnsubscribeResponse {
    // nothing yet
}

message PublishRequest {
    required string name = 1;
    required sint64 target_id = 2;
    optional uint32 distance = 3;
    optional uint32 concurrency = 4;
}

message PublishResponse {
    // nothing yet
}

message UnpublishRequest {
    required string name = 1;
}

message UnpublishResponse {
    // nothing yet
}

message SetRouteRequest {
    required string name = 1;
    repeated Route routes = 2;
}

message SetRouteResponse {
    // nothing yet
}

message LookupRouteRequest {
    required string name = 1;
}

message LookupRouteResponse {
    repeated Route routes = 1;
}

enum Command {
    Subscribe = 1;
    GetEndpoints = 2;
    Unsubscribe = 3;
    Publish = 4;
    Unpublish = 5;
    LookupRoute = 6;
}
